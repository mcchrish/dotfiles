# Basics
snippet for "for loop" b
for (let i = 0, len = ${1:list}.length; i < len; i++) {
  let ${2:item} = $1[i]
  ${VISUAL}$0
}
endsnippet

snippet fn "function (fn)"
function ${1:function_name} (${2:argument}) {
  ${VISUAL}$0
}
endsnippet

snippet fna "arrow function (fn)"
${1:argument} => {
  ${VISUAL}$0
}
endsnippet

snippet if "if"
if (${1:true}) {
  ${VISUAL}$0
}
endsnippet

snippet ife "if"
if (${1:true}) {
  ${VISUAL}$0
} else $3 {
  ${VISUAL}$2
}
endsnippet

snippet switch "switch"
switch (${1:condition}) {
  case $0:
    ${VISUAL}$2
    break
  
  default:
    ${VISUAL}$3
}
endsnippet

snippet try "try"
try {
  ${VISUAL}$0
} catch(error) {
  ${VISUAL}$1
}
endsnippet

# JSDoc snippets

snippet /* "A JSDoc comment" b
/**
 * ${1:${VISUAL}}$0
 */
endsnippet

# Modules
snippet req
const ${1} = require('${0}')
endsnippet

snippet mex "module exports" b
module.exports = ${1}
endsnippet

# ES6
snippet const
const ${1} = ${0}
endsnippet

snippet let
let ${1} = ${0}
endsnippet

snippet im
import ${1} from '${0}'
endsnippet

snippet ex
export ${1:default} ${2}
endsnippet

snippet cla
class ${1} {
  ${0}
}
endsnippet

snippet clax
class ${1} extends ${2} {
  ${0}
}
endsnippet


# For testing
snippet des "describe('thing', () => { ... })" b
describe('${1:}', () => {
  ${0:${VISUAL}}
})
endsnippet

snippet it "it('should do', () => { ... })" b
it('${1:}', () => {
  ${0:${VISUAL}}
})
endsnippet

snippet bef "before(() => { ... })" b
before(() => {
  ${0:${VISUAL}}
})
endsnippet

snippet aft "after(() => { ... })" b
after(() => {
  ${0:${VISUAL}}
})
endsnippet

# Snippets for Console Debug Output

snippet ce "console.error" b
console.error(${1:"${2:value}"})
endsnippet

snippet ci "console.info" b
console.info(${1:"${2:value}"})
endsnippet

snippet cl "console.log" b
console.log(${1:'${2:value}'})
endsnippet

snippet cd "console.debug" b
console.debug(${1:'${2:value}'})
endsnippet

snippet ctable "console.table" b
console.table(${1:'${2:value}'})
endsnippet

snippet ctimestamp "console.timeStamp" b
console.timeStamp('${1:label}')
endsnippet

snippet ctrace "console.trace" b
console.trace()
endsnippet

snippet cw "console.warn" b
console.warn(${1:'${2:value}'})
endsnippet
